// <auto-generated />
using System;
using Alkemy.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Alkemy.Migrations
{
    [DbContext(typeof(AlkemyContext))]
    [Migration("20211022194211_segunda")]
    partial class segunda
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Alkemy.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imagen")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("Alkemy.Models.GeneroPelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GeneroId");

                    b.Property<int>("PeliculaSerieId");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.HasIndex("PeliculaSerieId");

                    b.ToTable("GeneroPelicula");
                });

            modelBuilder.Entity("Alkemy.Models.PeliculaSerie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Calificacion");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<string>("Imagen")
                        .IsRequired();

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.ToTable("PeliculaSeries");
                });

            modelBuilder.Entity("Alkemy.Models.Personaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Edad");

                    b.Property<string>("Historia")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<float>("Peso");

                    b.HasKey("Id");

                    b.ToTable("Personaje");
                });

            modelBuilder.Entity("Alkemy.Models.PersonajePelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PeliculaSerieId");

                    b.Property<int>("PersonajeId");

                    b.HasKey("Id");

                    b.HasIndex("PeliculaSerieId");

                    b.HasIndex("PersonajeId");

                    b.ToTable("PersonajePelicula");
                });

            modelBuilder.Entity("Alkemy.Models.GeneroPelicula", b =>
                {
                    b.HasOne("Alkemy.Models.Genero", "Genero")
                        .WithMany("GeneroPelicula")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Alkemy.Models.PeliculaSerie", "PeliculaSerie")
                        .WithMany("GeneroPelicula")
                        .HasForeignKey("PeliculaSerieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Alkemy.Models.PersonajePelicula", b =>
                {
                    b.HasOne("Alkemy.Models.PeliculaSerie", "PeliculaSerie")
                        .WithMany("PersonajesPelicula")
                        .HasForeignKey("PeliculaSerieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Alkemy.Models.Personaje", "Personaje")
                        .WithMany("PersonajePeliculas")
                        .HasForeignKey("PersonajeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
